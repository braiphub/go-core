// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/braiphub/go-core/tracer/dd-otl (interfaces: TraceProviderI)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTraceProviderI is a mock of TraceProviderI interface.
type MockTraceProviderI struct {
	ctrl     *gomock.Controller
	recorder *MockTraceProviderIMockRecorder
}

// MockTraceProviderIMockRecorder is the mock recorder for MockTraceProviderI.
type MockTraceProviderIMockRecorder struct {
	mock *MockTraceProviderI
}

// NewMockTraceProviderI creates a new mock instance.
func NewMockTraceProviderI(ctrl *gomock.Controller) *MockTraceProviderI {
	mock := &MockTraceProviderI{ctrl: ctrl}
	mock.recorder = &MockTraceProviderIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTraceProviderI) EXPECT() *MockTraceProviderIMockRecorder {
	return m.recorder
}

// Shutdown mocks base method.
func (m *MockTraceProviderI) Shutdown() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Shutdown")
	ret0, _ := ret[0].(error)
	return ret0
}

// Shutdown indicates an expected call of Shutdown.
func (mr *MockTraceProviderIMockRecorder) Shutdown() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Shutdown", reflect.TypeOf((*MockTraceProviderI)(nil).Shutdown))
}
